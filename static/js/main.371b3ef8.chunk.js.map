{"version":3,"sources":["context/TeamContext.js","hooks/teamHooks.js","components/crossIcon/CrossIcon.js","components/Modal/Modal.js","components/Scorebutton/ScoreButton.js","components/Category/Category.js","components/Board/Board.js","components/Header/Header.js","App.js","reportWebVitals.js","index.js"],"names":["TeamContext","createContext","TeamsContextProvider","props","children","useState","context","teams","setTeams","Provider","value","useAllTeam","useContext","CrossIcon","viewBox","className","x1","y1","x2","y2","stroke","strokeWidth","Modal","title","hidden","onDialogToggle","strict","classNameForModal","classNames","require","modalRoot","document","getElementById","Error","ReactDOM","createPortal","backdrop","onClick","ScoreButton","winnerTeam","setWinnerTeam","isDisabled","setIsDisabled","isModalOpen","setIsModalOpen","errorMessage","setErrorMessage","classNamesForScoreButton","score","categoryName","disabled","htmlFor","name","id","onChange","e","target","map","team","index","type","undefined","teamToGetPoints","find","indexOf","teamsArray","Category","Board","Header","teamName","setTeamName","required","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.371b3ef8.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\n\nexport const TeamContext = createContext();\n\nexport function TeamsContextProvider(props) {\n  const { children } = props;\n  const [teams, setTeams] = useState([]);\n\n  const context = {\n    teams,\n    setTeams,\n  };\n\n  return (\n    <TeamContext.Provider value={context}>{children}</TeamContext.Provider>\n  );\n}\n","import { useContext } from \"react\";\nimport {TeamContext} from \"../context/TeamContext\";\n\nexport function useAllTeam() {\n  return useContext(TeamContext);\n}\n","import React from \"react\";\n\nimport \"./CrossIcon.css\";\n\nexport function CrossIcon() {\n  return (\n    <svg viewBox=\"0 0 10 10\" className=\"cross-icon\">\n      <line\n        x1=\"0\"\n        y1=\"10\"\n        x2=\"10\"\n        y2=\"0\"\n        stroke=\"currentColor\"\n        strokeWidth=\"2\"\n      />\n      <line\n        x1=\"0\"\n        y1=\"0\"\n        x2=\"10\"\n        y2=\"10\"\n        stroke=\"currentColor\"\n        strokeWidth=\"2\"\n      />\n    </svg>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CoreDialog from \"@nrk/core-dialog/jsx\";\n\nimport \"./Modal.css\";\nimport { CrossIcon } from \"../crossIcon/CrossIcon\";\n\nexport function Modal(props) {\n  const {\n    title,\n    hidden,\n    onDialogToggle,\n    children,\n    strict = false,\n    classNameForModal,\n  } = props;\n\n  const classNames = require(\"classnames\");\n  const modalRoot = document.getElementById(\"modal-root\");\n\n  if (!modalRoot) {\n    throw Error(\"Could not find he DOM element to render modal in.\");\n  }\n\n  return ReactDOM.createPortal(\n    <div className={classNames(\"modal\", classNameForModal)}>\n      <CoreDialog\n        className=\"modal-content\"\n        hidden={hidden}\n        strict={strict}\n        backdrop={true}\n        onDialogToggle={onDialogToggle}\n      >\n        <h3 className=\"modal-title\">{title}</h3>\n        {children}\n        <button\n          onClick={onDialogToggle}\n          className=\"modal-close-button remove-button-style\"\n        >\n          <CrossIcon />\n        </button>\n      </CoreDialog>\n    </div>,\n    modalRoot\n  );\n}\n","import React, { useState } from \"react\";\n\nimport \"./ScoreButton.css\";\nimport { useAllTeam } from \"../../hooks/teamHooks\";\nimport { Modal } from \"../Modal/Modal\";\n\nexport function ScoreButton(props) {\n  const [winnerTeam, setWinnerTeam] = useState();\n  const [isDisabled, setIsDisabled] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const { teams, setTeams } = useAllTeam();\n\n  const classNames = require(\"classnames\");\n  const classNamesForScoreButton = classNames({\n    \"score-button\": true,\n    \"score-button-disabled\": isDisabled,\n    \"score-button-not-disabled\": !isDisabled,\n  });\n\n  const { score, categoryName } = props;\n\n  return (\n    <>\n      <button\n        className={classNamesForScoreButton}\n        onClick={() => {\n          setIsDisabled(true);\n          setIsModalOpen(true);\n        }}\n        disabled={isDisabled}\n      >\n        {score}\n      </button>\n      {isModalOpen && (\n        <Modal\n          title={`${categoryName} ${score} poeng`}\n          hidden={false}\n          onDialogToggle={() => setIsModalOpen(!isModalOpen)}\n        >\n          <div className=\"select-component\">\n            <label htmlFor=\"teams\">Velg laget som gjettet korrekt:</label>\n            <select\n              name=\"teams\"\n              id=\"teams\"\n              onChange={(e) => setWinnerTeam(e.target.value)}\n            >\n              <option value=\"\" />\n              {teams.map((team, index) => (\n                <option value={team.name} key={index}>\n                  {team.name}\n                </option>\n              ))}\n            </select>\n          </div>\n          {errorMessage && <span>{errorMessage}</span>}\n          <button\n            type=\"button\"\n            className=\"add-points-button\"\n            onClick={addScore}\n          >\n            Legg til poeng\n          </button>\n        </Modal>\n      )}\n    </>\n  );\n\n  function addScore() {\n    if (winnerTeam === undefined) {\n      setErrorMessage(\"PÃ¥krevd felt.\");\n      return;\n    }\n\n    const teamToGetPoints = teams.find((team) => team.name === winnerTeam);\n    const index = teams.indexOf(teamToGetPoints);\n\n    if (teamToGetPoints === undefined || index === -1) {\n      setErrorMessage(\n        \"Laget finnes ikke.. Be Thomas skjerpe seg og skrive bedre kode for dette skal ikke skje.\"\n      );\n      return;\n    }\n\n    // Changing the object of the team to update score before adding the new object to teams array\n    const teamsArray = [...teams];\n    teamsArray[index] = {\n      ...teamToGetPoints,\n      score: teamToGetPoints.score + score,\n    };\n    setTeams(teamsArray);\n\n    setIsModalOpen(false);\n  }\n}\n","import React, { useState } from \"react\";\nimport { ScoreButton } from \"../Scorebutton/ScoreButton\";\n\nimport \"./Category.css\";\n\nexport function Category(props) {\n  const { name } = props;\n\n  const [categoryName, setCategoryName] = useState(name);\n\n  return (\n    <div className=\"category\">\n      <h2>{categoryName}</h2>\n      <ScoreButton score={100} categoryName={categoryName} />\n      <ScoreButton score={200} categoryName={categoryName} />\n      <ScoreButton score={300} categoryName={categoryName} />\n      <ScoreButton score={400} categoryName={categoryName} />\n      <ScoreButton score={500} categoryName={categoryName} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport {Category} from \"../Category/Category\";\nimport './Board.css';\n\nexport function Board() {\n  return (\n    <div className=\"board\">\n      <Category name={\"Sted\"} />\n      <Category name={\"Tall\"} />\n      <Category name={\"Mat og drikke\"} />\n      <Category name={\"Tid\"} />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport \"./Header.css\";\nimport { Modal } from \"../Modal/Modal\";\nimport { useAllTeam } from \"../../hooks/teamHooks\";\n\nexport function Header() {\n  const { teams, setTeams } = useAllTeam();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [teamName, setTeamName] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  return (\n    <header className=\"header\">\n      <div />\n      <h1>Jeopardy</h1>\n      <div className=\"header-button-content\">\n        <button\n          className=\"btn-primary btn-lg\"\n          onClick={() => setIsModalOpen(true)}\n        >\n          Legg til nytt lag\n        </button>\n      </div>\n      {isModalOpen && (\n        <Modal\n          title={\"Legg til lagnavn\"}\n          hidden={false}\n          onDialogToggle={() => setIsModalOpen(!isModalOpen)}\n        >\n          <form className=\"add-team-form\">\n            <label htmlFor=\"name\">Lagnavn</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              name=\"Lagnavn\"\n              required\n              onChange={(e) => {\n                setTeamName(e.target.value);\n                setErrorMessage(\"\");\n              }}\n            />\n            <span className=\"error\">{errorMessage}</span>\n          </form>\n          <button className=\"complete-button\" onClick={onCompleteClick}>\n            FullfÃ¸r\n          </button>\n        </Modal>\n      )}\n    </header>\n  );\n\n  function onCompleteClick() {\n    if (teamName === \"\") {\n      setErrorMessage(\"Lagnavn kan ikke vÃ¦re tomt.\");\n      return;\n    }\n    setTeams([...teams, { name: teamName, score: 0 }]);\n    setIsModalOpen(false);\n  }\n}\n","import \"./App.css\";\nimport \"./utilities/utilities.css\"\nimport { Board } from \"./components/Board/Board\";\nimport { Header } from \"./components/Header/Header\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { TeamsContextProvider } from \"./context/TeamContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <TeamsContextProvider>\n      <App />\n    </TeamsContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}