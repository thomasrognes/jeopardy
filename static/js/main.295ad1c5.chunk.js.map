{"version":3,"sources":["components/Scorebutton/ScoreButton.js","components/Category/Category.js","components/Board/Board.js","App.js","reportWebVitals.js","index.js"],"names":["ScoreButton","props","useState","isDisabled","setIsDisabled","classNamesForScoreButton","require","classNames","score","className","onClick","disabled","Category","name","categoryName","Board","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAKO,SAASA,EAAYC,GAC1B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAGMC,EADaC,EAAQ,EACMC,CAAW,CAC1C,gBAAgB,EAChB,wBAAyBJ,EACzB,6BAA8BA,IAGxBK,EAAUP,EAAVO,MAER,OACE,wBACEC,UAAWJ,EACXK,QAAS,kBAAMN,GAAc,IAC7BO,SAAUR,EAHZ,SAKGK,I,MClBA,SAASI,EAASX,GACvB,IAAQY,EAASZ,EAATY,KAER,EAAwCX,mBAASW,GAAjD,mBAAOC,EAAP,UAEA,OACE,sBAAKL,UAAU,WAAf,UACE,6BAAKK,IACL,cAAC,EAAD,CAAaN,MAAO,QACpB,cAAC,EAAD,CAAaA,MAAO,QACpB,cAAC,EAAD,CAAaA,MAAO,QACpB,cAAC,EAAD,CAAaA,MAAO,QACpB,cAAC,EAAD,CAAaA,MAAO,W,MCbnB,SAASO,IACd,OACE,sBAAKN,UAAU,QAAf,UACE,cAAC,EAAD,CAAUI,KAAM,SAChB,cAAC,EAAD,CAAUA,KAAM,cAChB,cAAC,EAAD,CAAUA,KAAM,QAChB,cAAC,EAAD,CAAUA,KAAM,WCGPG,MAVf,WAEE,OADiBV,EAAQ,GAEvB,sBAAKG,UAAU,MAAf,UACE,0CACA,cAAC,EAAD,QCISQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.295ad1c5.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport \"./ScoreButton.css\";\n\n\nexport function ScoreButton(props) {\n  const [isDisabled, setIsDisabled] = useState(false);\n\n  const classNames = require(\"classnames\");\n  const classNamesForScoreButton = classNames({\n    \"score-button\": true,\n    \"score-button-disabled\": isDisabled,\n    \"score-button-not-disabled\": !isDisabled,\n  });\n\n  const { score } = props;\n\n  return (\n    <button\n      className={classNamesForScoreButton}\n      onClick={() => setIsDisabled(true)}\n      disabled={isDisabled}\n    >\n      {score}\n    </button>\n  );\n}\n","import React, { useState } from \"react\";\nimport { ScoreButton } from \"../Scorebutton/ScoreButton\";\n\nimport \"./Category.css\";\n\nexport function Category(props) {\n  const { name } = props;\n\n  const [categoryName, setCategoryName] = useState(name);\n\n  return (\n    <div className=\"category\">\n      <h1>{categoryName}</h1>\n      <ScoreButton score={\"100\"} />\n      <ScoreButton score={\"200\"} />\n      <ScoreButton score={\"300\"} />\n      <ScoreButton score={\"400\"} />\n      <ScoreButton score={\"500\"} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport {Category} from \"../Category/Category\";\nimport './Board.css';\n\nexport function Board() {\n  return (\n    <div className=\"board\">\n      <Category name={\"Sted\"} />\n      <Category name={\"Kroppsdel\"} />\n      <Category name={\"Tid\"} />\n      <Category name={\"Mat\"} />\n    </div>\n  );\n}\n","import \"./App.css\";\nimport { Board } from \"./components/Board/Board\";\n\nfunction App() {\n  var classNames = require(\"classnames\");\n  return (\n    <div className=\"App\">\n      <h1>Jeopardy</h1>\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}